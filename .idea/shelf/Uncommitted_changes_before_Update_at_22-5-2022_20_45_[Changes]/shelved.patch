Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ProjectRootManager\" version=\"2\" project-jdk-name=\"Python 3.8 (Data-Intelligence-Challenge-main)\" project-jdk-type=\"Python SDK\" />\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision 06a1b849f2eedb3214117342bf3ab0b54ad159cf)
+++ b/.idea/misc.xml	(date 1653148536298)
@@ -1,4 +1,7 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
-  <component name="ProjectRootManager" version="2" project-jdk-name="Python 3.8 (Data-Intelligence-Challenge-main)" project-jdk-type="Python SDK" />
+  <component name="ProjectRootManager" version="2" project-jdk-name="Python 3.8 (Data-Intelligence-Challenge-Group-17)" project-jdk-type="Python SDK" />
+  <component name="PyCharmProfessionalAdvertiser">
+    <option name="shown" value="true" />
+  </component>
 </project>
\ No newline at end of file
Index: Discrete-Simulations/experiments.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># Import our robot algorithm to use in this simulation:\r\nfrom robot_configs.infinite_view_robot import robot_epoch as infinite_view_epoch\r\nfrom robot_configs.value_iteration_robot import robot_epoch as value_iteration_epoch\r\nfrom robot_configs.policy_iteration_robot import robot_epoch as policy_iteration_epoch\r\n\r\nimport pickle\r\nfrom environment import Robot\r\nimport pandas as pd\r\nimport numpy as np\r\nimport time\r\n\r\nexperiment_file_name = 'test_experiments_3_robots'\r\nruns = 1\r\nbattery_drainage_lambda = 1\r\n\r\n# All variables we can change for our experiments\r\n\r\n# Each grid has a certain number of tiles, but in some cases only a selected number of these tiles can\r\n# be visite (because of walls). We want to know whether we cleaned all reachable walls, therefore we\r\n# have a cleanliness criterion for each grid. Later we can adjust our percentage, to be relative to\r\n# this current percentage.\r\ngrid_files = {'death': 87.5, 'death_room': 96.83, 'empty_small_room': 100,\r\n              'empty_big_room': 100, 'example-random-house-0': 100,\r\n              'example-random-house-1': 73.68, 'example-random-house-2': 89.06,\r\n              'example-random-house-3': 82.98, 'example-random-house-4': 84.04,\r\n              'goal_room': 100, 'house': 100, 'snake': 100, 'obstacle_room': 100,\r\n              'no_obstacle_room': 100, 'example-random-level': 100}\r\n\r\nbattery_drainages_p = [0.1, 0.3, 0.5]\r\nrobots_epoch = [\r\n                #(greedy_epoch, 'greedy_random'),\r\n                #(rotator_epoch, 'rotator'),\r\n                (infinite_view_epoch, 'infinite_view_epoch'), \r\n                (value_iteration_epoch, 'value_iteration'),\r\n                (policy_iteration_epoch, 'policy_iteration')]\r\n\r\n# In the lists below, we gather data.\r\nrobot_per_setting = []\r\ngrid_per_setting = []\r\nbattery_per_setting = []\r\n\r\nmean_cleaned = []\r\nstd_cleaned = []\r\nmean_efficiency = []\r\nstd_efficiency = []\r\nmean_time_taken = []\r\nstd_time_taken = []\r\n\r\n# Counter to keep track of how far we are in our experiments (relative to total_count).\r\ncounter = 1\r\ntotal_count = len(grid_files)*len(battery_drainages_p)*len(robots_epoch)*runs\r\n\r\nfor grid_file, stopping_criterion in grid_files.items():\r\n    for battery_drainage_p in battery_drainages_p:\r\n        for robot_epoch in robots_epoch:\r\n            efficiencies = []\r\n            n_moves = []\r\n            deaths = 0\r\n            cleaned = []\r\n            times = []\r\n\r\n            for i in range(runs): # ? runs\r\n                start = time.time()\r\n                # Open the grid file.\r\n                # (You can create one yourself using the provided editor).\r\n\r\n                with open(f'grid_configs/{grid_file}.grid', 'rb') as f:\r\n                    grid = pickle.load(f)\r\n\r\n                # Calculate the total visitable tiles:\r\n                n_total_tiles = (grid.cells >= 0).sum()\r\n                # Spawn the robot at (1,1) facing north with battery drainage enabled:\r\n                robot = Robot(grid, (1, 1), orientation='n', battery_drain_p=battery_drainage_p,\r\n                              battery_drain_lam=battery_drainage_lambda)\r\n                # Keep track of the number of robot decision epochs:\r\n                n_epochs = 0\r\n\r\n                while True:\r\n                    n_epochs += 1\r\n                    # Do a robot epoch (basically call the robot algorithm once):\r\n                    robot_epoch[0](robot)\r\n                    # Stop this simulation instance if robot died :( :\r\n                    if not robot.alive:\r\n                        deaths += 1\r\n                        break\r\n                    # Calculate some statistics:\r\n                    clean = (grid.cells == 0).sum()\r\n                    dirty = (grid.cells >= 1).sum()\r\n                    goal = (grid.cells == 2).sum()\r\n                    # Calculate the cleaned percentage:\r\n                    clean_percent = (clean / (dirty + clean)) * 100\r\n                    # See if the room can be considered clean, if so, stop the simulation instance:\r\n                    if clean_percent >= stopping_criterion-0.01 and goal == 0:\r\n                        # Here we divide by the threshold, because there are more tiles considered\r\n                        # in the equation than there are dirty tiles. We want our score relative to\r\n                        # the number of initially dirty tiles.\r\n                        clean_percent = clean_percent / grid_files[grid_file] * 100\r\n                        break\r\n                    # Calculate the effiency score:\r\n                    moves = [(x, y) for (x, y) in zip(robot.history[0], robot.history[1])]\r\n                    u_moves = set(moves)\r\n                    n_revisted_tiles = len(moves) - len(u_moves)\r\n                    efficiency = (100 * n_total_tiles) / (n_total_tiles + n_revisted_tiles)\r\n\r\n                # Keep track of the last statistics for each simulation instance:\r\n                efficiencies.append(float(efficiency))\r\n                n_moves.append(len(robot.history[0]))\r\n                cleaned.append(clean_percent)\r\n\r\n                print(f'{counter} done out of {total_count}')\r\n                counter += 1\r\n\r\n                end = time.time()\r\n                times.append(end-start)\r\n\r\n\r\n            robot_per_setting.append(robot_epoch[1])\r\n            grid_per_setting.append(grid_file)\r\n            battery_per_setting.append(battery_drainage_p)\r\n\r\n            mean_cleaned.append(np.mean(cleaned))\r\n            std_cleaned.append(np.std(cleaned))\r\n            mean_efficiency.append(np.mean(efficiencies))\r\n            std_efficiency.append(np.std(efficiencies))\r\n            mean_time_taken.append(np.mean(times))\r\n            std_time_taken.append(np.std(times))\r\n\r\n\r\n\r\ndata_matrix =  list(zip(robot_per_setting, grid_per_setting, battery_per_setting,\r\n                        mean_cleaned, std_cleaned, mean_efficiency, std_efficiency,\r\n                        mean_time_taken, std_time_taken))\r\ncolumn_names = ['robot', 'grid', 'battery_p', 'mean_cleaned', 'std_cleaned',\r\n                'mean_efficiency', 'std_efficiency', 'mean_time_taken',\r\n                'std_time_taken']\r\n\r\nresults_df = pd.DataFrame(data_matrix, columns=column_names)\r\nresults_df.to_csv(f'experiment_results/{experiment_file_name}.csv', index=False)
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Discrete-Simulations/experiments.py b/Discrete-Simulations/experiments.py
--- a/Discrete-Simulations/experiments.py	(revision 06a1b849f2eedb3214117342bf3ab0b54ad159cf)
+++ b/Discrete-Simulations/experiments.py	(date 1653148541357)
@@ -1,5 +1,7 @@
 # Import our robot algorithm to use in this simulation:
+from robot_configs.greedy_random_robot import robot_epoch as greedy_epoch
 from robot_configs.infinite_view_robot import robot_epoch as infinite_view_epoch
+from robot_configs.rotatorinator import robot_epoch as rotator_epoch
 from robot_configs.value_iteration_robot import robot_epoch as value_iteration_epoch
 from robot_configs.policy_iteration_robot import robot_epoch as policy_iteration_epoch
 
@@ -8,6 +10,7 @@
 import pandas as pd
 import numpy as np
 import time
+import matplotlib.pyplot as plt
 
 experiment_file_name = 'test_experiments_3_robots'
 runs = 1
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"d1f1c33a-7b21-46e2-9005-2408b963b11d\" name=\"Changes\" comment=\"\">\r\n      <change afterPath=\"$PROJECT_DIR$/Discrete-Simulations/__init__.py\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/Discrete-Simulations/robot_configs/other/__init__.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/Discrete-Simulations/Experiments2.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Discrete-Simulations/Experiments2.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/Discrete-Simulations/experiments.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Discrete-Simulations/experiments.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/Discrete-Simulations/grid_configs/AAAAdeath.grid\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Discrete-Simulations/grid_configs/death.grid\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/Discrete-Simulations/robot_configs/greedy_robot.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Discrete-Simulations/robot_configs/other/greedy_robot.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/Discrete-Simulations/robot_configs/infinite_view_robot.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Discrete-Simulations/robot_configs/other/infinite_view_robot.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/Discrete-Simulations/robot_configs/rotatorinator.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Discrete-Simulations/robot_configs/other/rotatorinator.py\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Python Script\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"FlaskConsoleOptions\" custom-start-script=\"import sys&#10;sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;from flask.cli import ScriptInfo&#10;locals().update(ScriptInfo(create_app=None).load_app().make_shell_context())&#10;print(&quot;Python %s on %s\\nApp: %s [%s]\\nInstance: %s&quot; % (sys.version, sys.platform, app.import_name, app.env, app.instance_path))\">\r\n    <envs>\r\n      <env key=\"FLASK_APP\" value=\"app\" />\r\n    </envs>\r\n    <option name=\"myCustomStartScript\" value=\"import sys&#10;sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;from flask.cli import ScriptInfo&#10;locals().update(ScriptInfo(create_app=None).load_app().make_shell_context())&#10;print(&quot;Python %s on %s\\nApp: %s [%s]\\nInstance: %s&quot; % (sys.version, sys.platform, app.import_name, app.env, app.instance_path))\" />\r\n    <option name=\"myEnvs\">\r\n      <map>\r\n        <entry key=\"FLASK_APP\" value=\"app\" />\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitSEFilterConfiguration\">\r\n    <file-type-list>\r\n      <filtered-out-file-type name=\"LOCAL_BRANCH\" />\r\n      <filtered-out-file-type name=\"REMOTE_BRANCH\" />\r\n      <filtered-out-file-type name=\"TAG\" />\r\n      <filtered-out-file-type name=\"COMMIT_BY_MESSAGE\" />\r\n    </file-type-list>\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"28hA7Cz9SaEul11W26ej3BnrD2q\" />\r\n  <component name=\"ProjectLevelVcsManager\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">\r\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\r\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\r\n    <property name=\"WebServerToolWindowFactoryState\" value=\"false\" />\r\n    <property name=\"last_opened_file_path\" value=\"$PROJECT_DIR$/Discrete-Simulations/robot_configs\" />\r\n    <property name=\"settings.editor.selected.configurable\" value=\"editor.preferences.fonts.default\" />\r\n  </component>\r\n  <component name=\"ReaderModeSettings\">\r\n    <option name=\"showLigatures\" value=\"true\" />\r\n  </component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"$PROJECT_DIR$/Discrete-Simulations/robot_configs\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"$PROJECT_DIR$/Discrete-Simulations/robot_configs/other\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"app\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"Data-Intelligence-Challenge-Group-17\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/Discrete-Simulations\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/Discrete-Simulations/app.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Python.app\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"d1f1c33a-7b21-46e2-9005-2408b963b11d\" name=\"Changes\" comment=\"\" />\r\n      <created>1651658275211</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1651658275211</updated>\r\n      <workItem from=\"1651658276576\" duration=\"1063000\" />\r\n      <workItem from=\"1651667238245\" duration=\"167000\" />\r\n      <workItem from=\"1651667415931\" duration=\"3957000\" />\r\n      <workItem from=\"1651836896431\" duration=\"9439000\" />\r\n      <workItem from=\"1652270357557\" duration=\"2627000\" />\r\n      <workItem from=\"1652354541299\" duration=\"11528000\" />\r\n      <workItem from=\"1652454366479\" duration=\"2688000\" />\r\n      <workItem from=\"1652801250972\" duration=\"601000\" />\r\n      <workItem from=\"1652875638084\" duration=\"2805000\" />\r\n    </task>\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"com.intellij.coverage.CoverageDataManagerImpl\">\r\n    <SUITE FILE_PATH=\"coverage/Data_Intelligence_Challenge_Group_17$app.coverage\" NAME=\"app Coverage Results\" MODIFIED=\"1651838964795\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/Discrete-Simulations\" />\r\n    <SUITE FILE_PATH=\"coverage/GroupAssignment$experiments.coverage\" NAME=\"experiments Coverage Results\" MODIFIED=\"1652875964057\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/Discrete-Simulations\" />\r\n    <SUITE FILE_PATH=\"coverage/GroupAssignment$app.coverage\" NAME=\"app Coverage Results\" MODIFIED=\"1652876283062\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/Discrete-Simulations\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 06a1b849f2eedb3214117342bf3ab0b54ad159cf)
+++ b/.idea/workspace.xml	(date 1653245114325)
@@ -1,15 +1,14 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
+  <component name="AutoImportSettings">
+    <option name="autoReloadType" value="SELECTIVE" />
+  </component>
   <component name="ChangeListManager">
-    <list default="true" id="d1f1c33a-7b21-46e2-9005-2408b963b11d" name="Changes" comment="">
-      <change afterPath="$PROJECT_DIR$/Discrete-Simulations/__init__.py" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/Discrete-Simulations/robot_configs/other/__init__.py" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Discrete-Simulations/Experiments2.py" beforeDir="false" afterPath="$PROJECT_DIR$/Discrete-Simulations/Experiments2.py" afterDir="false" />
+    <list default="true" id="d1f1c33a-7b21-46e2-9005-2408b963b11d" name="Changes" comment="Experiment setup for Monte Carlo done. Only need to run now">
+      <change beforePath="$PROJECT_DIR$/.idea/Data-Intelligence-Challenge-Group-17.iml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/Data-Intelligence-Challenge-Group-17.iml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/Discrete-Simulations/experiments.py" beforeDir="false" afterPath="$PROJECT_DIR$/Discrete-Simulations/experiments.py" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Discrete-Simulations/grid_configs/AAAAdeath.grid" beforeDir="false" afterPath="$PROJECT_DIR$/Discrete-Simulations/grid_configs/death.grid" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Discrete-Simulations/robot_configs/greedy_robot.py" beforeDir="false" afterPath="$PROJECT_DIR$/Discrete-Simulations/robot_configs/other/greedy_robot.py" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Discrete-Simulations/robot_configs/infinite_view_robot.py" beforeDir="false" afterPath="$PROJECT_DIR$/Discrete-Simulations/robot_configs/other/infinite_view_robot.py" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Discrete-Simulations/robot_configs/rotatorinator.py" beforeDir="false" afterPath="$PROJECT_DIR$/Discrete-Simulations/robot_configs/other/rotatorinator.py" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -74,7 +73,7 @@
       <recent name="$PROJECT_DIR$/Discrete-Simulations/robot_configs/other" />
     </key>
   </component>
-  <component name="RunManager">
+  <component name="RunManager" selected="Python.experiments_monte_carlo">
     <configuration name="app" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
       <module name="Data-Intelligence-Challenge-Group-17" />
       <option name="INTERPRETER_OPTIONS" value="" />
@@ -97,8 +96,30 @@
       <option name="INPUT_FILE" value="" />
       <method v="2" />
     </configuration>
+    <configuration name="experiments_monte_carlo" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
+      <module name="Data-Intelligence-Challenge-Group-17" />
+      <option name="INTERPRETER_OPTIONS" value="" />
+      <option name="PARENT_ENVS" value="true" />
+      <envs>
+        <env name="PYTHONUNBUFFERED" value="1" />
+      </envs>
+      <option name="SDK_HOME" value="" />
+      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/Discrete-Simulations" />
+      <option name="IS_MODULE_SDK" value="true" />
+      <option name="ADD_CONTENT_ROOTS" value="true" />
+      <option name="ADD_SOURCE_ROOTS" value="true" />
+      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/Discrete-Simulations/experiments_monte_carlo.py" />
+      <option name="PARAMETERS" value="" />
+      <option name="SHOW_COMMAND_LINE" value="false" />
+      <option name="EMULATE_TERMINAL" value="false" />
+      <option name="MODULE_MODE" value="false" />
+      <option name="REDIRECT_INPUT" value="false" />
+      <option name="INPUT_FILE" value="" />
+      <method v="2" />
+    </configuration>
     <recent_temporary>
       <list>
+        <item itemvalue="Python.experiments_monte_carlo" />
         <item itemvalue="Python.app" />
       </list>
     </recent_temporary>
@@ -121,6 +142,14 @@
       <workItem from="1652801250972" duration="601000" />
       <workItem from="1652875638084" duration="2805000" />
     </task>
+    <task id="LOCAL-00001" summary="Experiment setup for Monte Carlo done. Only need to run now">
+      <created>1653214629382</created>
+      <option name="number" value="00001" />
+      <option name="presentableId" value="LOCAL-00001" />
+      <option name="project" value="LOCAL" />
+      <updated>1653214629382</updated>
+    </task>
+    <option name="localTasksCounter" value="2" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -136,10 +165,10 @@
         </entry>
       </map>
     </option>
+    <option name="oldMeFiltersMigrated" value="true" />
   </component>
-  <component name="com.intellij.coverage.CoverageDataManagerImpl">
-    <SUITE FILE_PATH="coverage/Data_Intelligence_Challenge_Group_17$app.coverage" NAME="app Coverage Results" MODIFIED="1651838964795" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/Discrete-Simulations" />
-    <SUITE FILE_PATH="coverage/GroupAssignment$experiments.coverage" NAME="experiments Coverage Results" MODIFIED="1652875964057" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/Discrete-Simulations" />
-    <SUITE FILE_PATH="coverage/GroupAssignment$app.coverage" NAME="app Coverage Results" MODIFIED="1652876283062" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/Discrete-Simulations" />
+  <component name="VcsManagerConfiguration">
+    <MESSAGE value="Experiment setup for Monte Carlo done. Only need to run now" />
+    <option name="LAST_COMMIT_MESSAGE" value="Experiment setup for Monte Carlo done. Only need to run now" />
   </component>
 </project>
\ No newline at end of file
Index: .idea/Data-Intelligence-Challenge-Group-17.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<module type=\"PYTHON_MODULE\" version=\"4\">\r\n  <component name=\"NewModuleRootManager\">\r\n    <content url=\"file://$MODULE_DIR$\" />\r\n    <orderEntry type=\"jdk\" jdkName=\"Python 3.8 (Data-Intelligence-Challenge-main)\" jdkType=\"Python SDK\" />\r\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\r\n  </component>\r\n  <component name=\"PyDocumentationSettings\">\r\n    <option name=\"format\" value=\"PLAIN\" />\r\n    <option name=\"myDocStringFormat\" value=\"Plain\" />\r\n  </component>\r\n  <component name=\"TemplatesService\">\r\n    <option name=\"TEMPLATE_CONFIGURATION\" value=\"Jinja2\" />\r\n    <option name=\"TEMPLATE_FOLDERS\">\r\n      <list>\r\n        <option value=\"$MODULE_DIR$/Discrete-Simulations/templates\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n</module>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/Data-Intelligence-Challenge-Group-17.iml b/.idea/Data-Intelligence-Challenge-Group-17.iml
--- a/.idea/Data-Intelligence-Challenge-Group-17.iml	(revision 06a1b849f2eedb3214117342bf3ab0b54ad159cf)
+++ b/.idea/Data-Intelligence-Challenge-Group-17.iml	(date 1653203239013)
@@ -1,8 +1,10 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <module type="PYTHON_MODULE" version="4">
   <component name="NewModuleRootManager">
-    <content url="file://$MODULE_DIR$" />
-    <orderEntry type="jdk" jdkName="Python 3.8 (Data-Intelligence-Challenge-main)" jdkType="Python SDK" />
+    <content url="file://$MODULE_DIR$">
+      <excludeFolder url="file://$MODULE_DIR$/venv" />
+    </content>
+    <orderEntry type="inheritedJdk" />
     <orderEntry type="sourceFolder" forTests="false" />
   </component>
   <component name="PyDocumentationSettings">
